#+Title: Version control with Git
#+Author:
#+Date: 2015-04-21

* Version control

** A common problem

***                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.85
:END:
#+BEGIN_CENTER
[[file:img/phd052810s.png]]
#+END_CENTER

** Reproducibility of research

*** Reproducibility                                                 :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
- Research should be reproducible by others.
- This refers to the *experiments* generating the data, but also to the
  *analysis* of the data.
- The first researcher who will need to reproduce your results is likely to be
  *you*.

*** A lab notebook for analyses?                                  :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
- *Lab books* make lab work traceable. Analyses should also be traceable.
- Analysis steps must be *recorded*, and reverting to *any previous step* must
  be possible.
- This ensures that we always exactly know how a result was generated.

** A possible solution...

*** Version control                                               :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
- Version control is a tool to *keep track of file changes*.
- However, version control softwares offer more than simply recording
  successive versions of a file:
  - projects can be *shared with collaborators*
  - projects can be forked and merged (*branching*)
- Interesting both for collaborative work and for single developper

* Version control workflow example

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-01.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-02.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-03.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-04.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-05.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-06.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-07.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-08.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-09.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-10.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-11.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-12.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-13.png]]
#+END_CENTER

** Example of a version control workflow

#+BEGIN_CENTER
[[file:img/version-control-workflow-last-frame.png]]
#+END_CENTER

* Git

** What are the available tools?

*** Existing version control tools                                :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
  + [[https://subversion.apache.org/][Subversion]]
  + [[http://bazaar.canonical.com/en/),][Bazaar]]
  + [[http://mercurial.selenic.com/)][Mercurial]]
  + [[http://git-scm.com/][Git]]

*** Online servers for repositories                               :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
  + [[https://bitbucket.org/][BitBucket]] (free private repositories)
  + [[https://github.com][GitHub]] (free for public repositories but not for private repositories)

** Git

*** Git                                                           :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
- Relatively recent but very mature
- Decentralised model
- Reputed fast

* Practicals

** Practicals

*** Hands-on exercise
- You need to develop a script to analyse some sequence data
- Let's develop a small Python script together using version control
- At the end of this exercise, you will have produced:
  - a fully traceable version of your work
  - a remote repository where you can share your work

* Git for single developer

** Structure of a project folder

What is version-controlled, what is not

* Org config                                                       :noexport:

#+OPTIONS: H:2 toc:nil
#+STARTUP: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [big]
#+LaTeX_HEADER: \usepackage{lmodern}
#+LaTeX_HEADER: \usetheme{Boadilla}
#+latex_header: \usecolortheme{whale}
#+LaTeX_HEADER: \setbeamertemplate{footline}{}
#+LaTeX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LaTeX_HEADER: \setbeamertemplate{itemize items}[circle]
#+LaTeX_HEADER: \setbeamertemplate{enumerate items}[circle]
#+LaTeX_HEADER: \setbeamertemplate{alert}{\textbf}
# http://tex.stackexchange.com/questions/171705/changing-your-bullet-points-in-beamer-block-maybe-boadilla
# http://tex.stackexchange.com/questions/68347/different-styles-of-bullets-of-enumerate
# http://tex.stackexchange.com/questions/66995/modify-footer-of-slides
# http://askubuntu.com/questions/98664/how-can-i-get-smooth-fonts-in-lyx
# http://orgmode.org/worg/exporters/beamer/tutorial.html
# http://orgmode.org/manual/Beamer-export.html
# https://lists.gnu.org/archive/html/emacs-orgmode/2008-07/msg00163.html
